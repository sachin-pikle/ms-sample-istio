box: combient/java-mvn 

deploy:
  #box:
        #id: alpine
        #cmd: /bin/sh

  steps:        
    # Register Inventory REST service in APIP
    - shellcheck
    
    #- script:
    #  name: Install kubectl
    #  code: |
    #    echo "Installing version $KUBERNETES_VERSION of kubernetes"
    #    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    #    sudo chmod +x ./kubectl
        
    - kubectl:
        name: kubectl version
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: version

    - script:
      name: Install istioctl
      code: |
        pwd
        echo "Installing istioctl"
        curl -L --compressed https://github.com/istio/istio/releases/download/0.2.7/istio-0.2.7-linux.tar.gz | tar -xz -C $PWD && export PATH=${PWD}/istio-0.2.7/bin:$PATH
        pwd

    - script:
      name: Check istioctl version
      code: |
        echo "Checking istioctl version"
        istioctl version
        
    - kubectl:
        name: create deployment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f <(istioctl kube-inject -f bookinfo.yaml)

    #- script:
    #  name: Deploy the bookinfo app with istio sidecar injection
    #  code: |
    #    echo "Deploy the bookinfo app with istio sidecar injection"
    #    ./kubectl --server=$KUBERNETES_MASTER --token=$KUBERNETES_TOKEN --insecure-skip-tls-verify=true apply -f <(istioctl kube-inject -f bookinfo.yaml)
